#! /usr/bin/env bash
#
#@(#)pceconv 1.00
#@(#)(C) 2019 redpeacock78
#@(#)GPLv3 is applied to this script.
#@(#)
######################################
#@(#)It rips and converts data of PC engine (Super)CD-ROM^2.
#@(#)Grobals:
#@(#)  DEFAULT_FILE_DESCRIPTER
#@(#)  MOUNT_POINT
#@(#)  SAMPLING_RATE
#@(#)  BIT_RATE
#@(#)  CDRDAO_TOC
#@(#)  CDPARANOIA_TOC
#@(#)Arguments:
#@(#)  -w, --no-mp3
#@(#)  -r, --rip-data
#@(#)  -h, --help
#@(#)  -v, --version
#@(#)Depends:
#@(#)  CDPARANOIA
#@(#)  CDRDAO
#@(#)  BCHUNK
#@(#)  FFMPEG
#@(#)  GNU AWK
######################################



####ALIAS_ACTIVATION####
shopt -s expand_aliases

###PARAMETERS###
DEFAULT_FILE_DESCLIPTER="$(ulimit -Sn)"
MOUNT_POINT="$(echo ${@##-*} | tr ' ' \\n | grep /)"
SAMPLING_RATE="$(echo ${@##-*} | tr ' ' \\n | grep -v /)"
BIT_RATE="$(echo ${@##-*} | tr ' ' \\n | grep -v / | grep k)"
CDRDAO_TOC="$(mktemp)"
CDPARANOIA_TOC="$(mktemp)"

####FUNCTIONS####
###MAIN###
function CHANGE_FILE_DESCLIPTER_VALUE(){
    ulimit -Sn 3000
}
function RESET_FILE_DESCLIPTER_VALUE(){
    ulimit -Sn "${DEFAULT_FILE_DESCLIPTER}"
}
function ALIAS(){
    if type "gawk" > /dev/null 2>&1; then
      alias awk="gawk"
    else
      if [[ "$(awk --version | head -n1)" =~ "GNU" ]]; then
        alias awk="awk"
      else
        echo "Error: Please install GUN AWK(gawk)." && \
        exit 2
      fi
    fi
}
function DISK_RIPPING(){
    ##FUNCTION##
    function MAKE_DIRS(){
        mkdir -p DATA && mkdir -p MUSIC
    }
    ##OS_JUDGE##
    if [[ "$(uname)" == "Darwin" ]]; then
      function DISK_UNMOUNT(){
          diskutil umount "${MOUNT_POINT}"
      }
      function DISK_EJECT(){
          drutil eject
      }
    elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
      function DISK_UNMOUNT(){
          sudo umount "${MOUNT_POINT}"
      }
      function DISK_EJECT(){
          sudo mount "${MOUNT_POINT}" && \
          eject "${MOUNT_POINT}"
      }
    fi && \
    ##MAIN##
    {
    DISK_UNMOUNT > /dev/null 2>&1 && \
    MAKE_DIRS && \
    echo "Currently ripping the disk..." && \
    (cdparanoia -vsQ) > "${CDPARANOIA_TOC}" 2>&1 && \
    (
    cdrdao read-cd \
           --rspeed 24 \
           --read-raw \
           --source-device "${MOUNT_POINT}" \
           --datafile DATA/DATA.bin \
           --driver generic-mmc-raw \
           DATA/DATA.toc
    ) > "${CDRDAO_TOC}" 2>&1 && \
    DISK_EJECT > /dev/null 2>&1 && \
    echo "Done!"
    }
}
function DATA_CONV(){
    {
    echo "Currently converting data..." && \
    (toc2cue -v 3 DATA/DATA.toc DATA/DATA.cue) > /dev/null 2>&1 && \
    (dd if=DATA/DATA.bin of=MUSIC/MUSIC.bin conv=swab) > /dev/null 2>&1 && \
    \cp -f DATA/DATA.cue MUSIC/MUSIC.cue && \
    sed -i -e "s#DATA/DATA.bin#MUSIC/MUSIC.bin#" MUSIC/MUSIC.cue && \
    (bchunk -w -v DATA/DATA.bin DATA/DATA.cue DATA/D_) > /dev/null 2>&1 && \
    (bchunk -w -v MUSIC/MUSIC.bin MUSIC/MUSIC.cue MUSIC/M_) > /dev/null 2>&1 && \
    for iso in $(\ls DATA | grep .iso | sed 's#^#DATA/#g'); do
        \cp -f ${iso} $(echo ${iso} | sed 's#DATA/D_##g')
    done && \
    echo "Done!"
    }
}
function WAV_TO_MP3(){
    {
    echo "Currently converting from wav to mp3..."
    for wav in $(find MUSIC -name *.wav); do
        ffmpeg -i ${wav} \
               -vn \
               -ac 2 \
               -ar ${SAMPLING_RATE:-"44100"} \
               -ab ${BIT_RATE:-"128k"} \
               -acodec libmp3lame \
               -f mp3 \
               -loglevel fatal \
               "$(echo ${wav} | sed 's#MUSIC/M_##g;s#.wav##g').mp3"
    done && \
    echo "Done!"
    }
}
function COPY_WAV(){
    {
    echo "Currently copy wav files..."
    for wav in $(\ls MUSIC | grep .wav | sed 's#^#MUSIC/#g'); do
        \cp -f ${wav} $(echo ${wav} | sed 's#MUSIC/M_##g')
    done && \
    echo "Done!"
    }
}
function TOC_GENERATE(){
    ##PARAMETERS##
    CDRDAO_TOC_START="$(grep -n -m1 'Track' ${CDRDAO_TOC} | awk -F : '{print $1}')"
    CDRDAO_TOC_END="$(grep -n -m1 'Leadout' ${CDRDAO_TOC} | awk -F : '{print $1}')"
    CDPARANOIA_TOC_START="$(grep -n 'track_num = 1 start' ${CDPARANOIA_TOC} | awk -F : '{print $1}')"
    CDPARANOIA_TOC_END="$(grep -n 'Attempting' ${CDPARANOIA_TOC} | awk -F : '{print $1}')"
    ##FUNCTIONS##
    function EXT_CDRDAO_TOC(){
        sed -n "${CDRDAO_TOC_START},${CDRDAO_TOC_END}p" "${CDRDAO_TOC}" \
        | sed '1,2d;$d' \
        | sed 's/^/Track /;s/\t/ /g;s/( */ /g;s/)//g;s/AUDIO/Audio/g;s/DATA/Data/g' \
        | awk '{printf("%s %02d %s LBA=%06d\n",$1,$2,$3,$6)}'
    }
    function EXT_CDPARANOIA_TOC(){
        sed -n "${CDPARANOIA_TOC_START},${CDPARANOIA_TOC_END}p" "${CDPARANOIA_TOC}" \
        | sed '$d;/^$/d' \
        | awk '{print $8}' \
        | awk -F , '{printf("%02d:%02d:%02d\n",$1,$2,$3)}'
    }
    ##MAIN##
    {
    echo "Currently toc file is being generated..." && \
    paste -d " " <(EXT_CDRDAO_TOC) <(EXT_CDPARANOIA_TOC) \
    | awk '{print $1,$2,$3,$5,$4}' > default.toc && \
    rm -rf "${CDRDAO_TOC}" "${CDPARANOIA_TOC}" && \
    echo "Done!"
    }
}
function REMOVE_RIP_DATA(){
    {
    echo "Currently remove MUSIC/ and DATA/..." && \
    rm -rf MUSIC/ DATA/ && \
    echo "Done!"
    }
}
###DISPLAY_INFMATION###
function PRINT_VERSION(){
    {
    echo "PC Engine (Super)CD-ROM^2 CONVERTER VER. 1.00" && \
    rm -rf "${CDRDAO_TOC}" "${CDPARANOIA_TOC}"
    }
}
function ERROR_MESSAGE(){
    cat << ERR >&2 
Sorry. An error has occurred :_(
Refer 'pceconv -h' or 'pceconv --help' for how to use the command.
ERR
    rm -rf "${CDRDAO_TOC}" "${CDPARANOIA_TOC}"
}
function USAGE(){
    PRINT_INFO="$(PRINT_VERSION)" && \
    cat << EOS >&2
${PRINT_INFO}
Usage: ${0##*/} [OPTION] [SOURCE_DEVICE] [SAMPLING_RATE] [BIT_RATE]

It rips and converts data of PC engine (Super)CD-ROM^2.
(Default SAMPLING_RATE="44100" and BIT_RATE="128k".)

Options:
    -w, --no-mp3     Does not convert wav files to mp3.
    -r, --rip-data   Erases the ripped data and leaves only the converted files.
    -h, --help       Show usage.
    -v, --version    Print this script version.

Example:
When the PC engine disk is mounted on /dev/disk3.

    $ ${0##*/} /dev/disk3
    $ ${0##*/} -w /dev/disk3
    $ ${0##*/} -r /dev/disk3 48000 320k

When the PC engine disk is mounted on /dev/sr0.

    $ ${0##*/} /dev/sr0
    $ ${0##*/} -w /dev/sr0
    $ ${0##*/} 48000 320k /dev/sr0

EOS
}



####MAIN_PROCESSING####
if [[ "${@}" == "-v" ]] || \
   [[ "${@}" == "--version" ]]; then
  PRINT_VERSION
elif [[ "${@}" == "-h" ]] || \
     [[ "${@}" == "--help" ]]; then
  USAGE
elif [[ "${@}" =~ -*w ]] || \
     [[ "${@}" =~ "--no-mp3" ]]; then
  {
  CHANGE_FILE_DESCLIPTER_VALUE && \
  ALIAS && \
  DISK_RIPPING && \
  DATA_CONV && \
  COPY_WAV && \
  TOC_GENERATE && \
  RESET_FILE_DESCLIPTER_VALUE
  } || {
  RESET_FILE_DESCLIPTER_VALUE && \
  ERROR_MESSAGE && \
  exit 1
  }
  if [[ "${@}" =~ -*r ]] || \
  	 [[ "${@}" =~ "--rm-ripdata" ]]; then
  	REMOVE_RIP_DATA \
  	|| {
  	RESET_FILE_DESCLIPTER_VALUE && \
  	ERROR_MESSAGE && \
  	exit 1
    }
  fi
elif [[ -z "${@}" ]]; then
  ERROR_MESSAGE && \
  exit 1
else
  {
  CHANGE_FILE_DESCLIPTER_VALUE && \
  ALIAS && \
  DISK_RIPPING && \
  DATA_CONV && \
  WAV_TO_MP3 && \
  TOC_GENERATE && \
  RESET_FILE_DESCLIPTER_VALUE
  } || {
  RESET_FILE_DESCLIPTER_VALUE && \
  ERROR_MESSAGE && \
  exit 1
  }
  if [[ "${@}" =~ "-r" ]] || \
  	 [[ "${@}" =~ "--rm-ripdata" ]]; then
  	REMOVE_RIP_DATA \
  	|| {
  	RESET_FILE_DESCLIPTER_VALUE && \
  	ERROR_MESSAGE && \
  	exit 1
  	}
  fi
fi
